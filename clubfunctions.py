'''
Author(s): Benjamin Gordon
Last Edited: 12/16/2019
Purpose:  Calls database functions and controls the relevant treeview for the club category
          It holds a dictionary to give it any table data it needs to do operations.
'''  

# Imports
from databaseinsert import DatabaseInsertClass
from tkinter import ttk, Listbox
from tkinter import Menu
from msilib.schema import ComboBox, ListBox
from tkinter.ttk import Treeview
from attendancewindows import AttendanceWindowsClass
from databaseconnection import DatabaseConnectionClass
from databaseupdate import DatabaseUpdateClass
from databasedelete import DatabaseDeleteClass
from databasequery import DatabaseQueryClass


class ClubFunctionsClass(object):
    '''
    This function  control operations on the database and treeview for the club category.
    It holds the table data needed to operate on the database and treeview in a dictionary.
    '''


    def __init__(self, connection, database, treeview, data = {}):
        '''
        Constructor
        '''
        # Database connection.
        self.connection = connection
        
        # Database variable
        self.database = database
         
         
        # Dictionary that stores table data for operations on the treeview and the
        # database. Its keys are set to the same one generated by the treeview for 
        # easy access.
        self.data = data 
        
        
        # The treeview attached to the GUI.
        self.treeview = treeview 
                
        # Initially fills dictionary and treeview upon creation.        
        datalist = DatabaseQueryClass.querycluball(database)
        
        for i in datalist:
        
 
            
            id = self.treeview.insert('', 'end', values = i[1:4])   
        
            self.data[id] = list(i)
        
        try:

            self.treeview.selection_set(id)
            self.treeview.focus(id)
            
        except:
            return
        
            
        
        
    def newclub(self, itemlist): 
        '''
        Adds a new club entry in the database, treeview and dictionary. 
        Inserts in the club and club info table.
        ''' 
        
        
        list1 = DatabaseInsertClass().insertclub(self.database, self.connection, itemlist[0:4])
        
        itemlist[10] = list1[0]
        
        list2 = DatabaseInsertClass().insertclubinfo(self.database, self.connection, itemlist[4:11])
        
        # Combines club and clubinfo table for insertion into the dictionary and treeview.
        inputlist = list1+list2 
        
        id = self.treeview.insert('', 'end', values = tuple(inputlist[1:4]))   
        
        self.data[id] = inputlist
        
    def editclub(self, itemlist):
        '''
        Edits selected club entry in the database, treeview and dictionary. 
        Edits the club  and club info table.
        '''
        
        id = self.treeview.selection()
        
        id = str(id[0])
        
        templist = self.data[id] 
        
        list1 = DatabaseUpdateClass().updateclub(self.database, self.connection, itemlist[0:4], templist[0])
        
        list2 = DatabaseUpdateClass().updateclubinfo(self.database, self.connection, itemlist[4:11], templist[5])
        
        # Combines club and clubinfo table for insertion into the dictionary and treeview.
        inputlist = list1 + list2
        
        
        self.treeview.item(id, values = tuple(inputlist[1:4]))
        
        self.data[id] = inputlist
        
    def deleteclub(self):
        '''
        Deletes selected club entry from database, treeview and dictionary. 
        Deletes club and club info table.
        '''
        
        id = self.treeview.selection()
        
        id = str(id[0])
        
        templist = self.data[id] 
        
        DatabaseDeleteClass().deleteclub(self.database, self.connection, templist[0])
        
        self.treeview.delete(id)
        
        self.data.pop(id)
        
    def retrieveclub(self):
        '''
        Returns selected budget entry from dictionary.
        '''
        
        id = self.treeview.selection()
        
        id = id[0]
        
        itemlist = self.data[id] 
        
        return itemlist
    
    def queryclub(self):
        '''
        Queries selected budget entry.
        Queries club and club info table.
        '''
       
        id = self.treeview.selection()
       
        id = id[0]
       
        itemlist = self.data[id]
       
        list = DatabaseQueryClass.queryclub(self.database, itemlist[0])

        return list
    
    def fillclubnames(self, treeview):
        '''
        Gets all club names and ids from the dictionary
        and inserts them in the treeview.
        '''        

        
        namelist = self.data.values() 
        
        # Inserts names and ids into the treeview
        for i in namelist:
        
            id = treeview.insert('', 'end', values = tuple([i[1]]+[i[0]]))   
            
        
        try:

            self.treeview.selection_set(id)
            self.treeview.focus(id)
            
        except:
            return

    
    def clearclub(self):
        '''
        Clears dictionary and treeview
        '''        

        list = self.data.keys()

        # Clears treeview
        for id in list:
            self.treeview.delete(id)
  
        # Clears dictionary
        self.data.clear()
        
            
        
        
        
        
        
        
         
        
        